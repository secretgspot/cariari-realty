'use strict';

var api = require('./api-12e8b0c7.js');
var StaticMap = require('./StaticMap-5e5df9cc.js');
require('./app-88572a1b.js');
var Toggle = require('./Toggle-d93cad25.js');

function isEmpty(val) {
	let valType = typeof val;

	if (valType === 'string') return val.trim().length === 0;
	if (valType === 'number') return val.length === 0;
	if (val instanceof Array) return val.length === 0;
}

/* src\components\UI\Modal.svelte generated by Svelte v3.12.1 */

const css = {
	code: "aside.svelte-1k5ryxn{position:fixed;top:0;left:0;bottom:0;right:0;background:hsla(0, 9%, 96%, 0.81);display:flex;align-items:center;justify-content:center;padding:20px;z-index:10}aside.svelte-1k5ryxn .box.svelte-1k5ryxn{background:#fff;width:63vw;max-width:666px;border-radius:9px;position:relative;box-shadow:0px 12px 15px 0px hsla(0, 0%, 0%, 0.18)}aside.svelte-1k5ryxn .box header.svelte-1k5ryxn{display:flex;justify-content:space-between;align-items:center;padding:20px}aside.svelte-1k5ryxn .box header h3.svelte-1k5ryxn{margin:0;font-size:23px;font-weight:500}aside.svelte-1k5ryxn .box header button.svelte-1k5ryxn{background:none;border:none;padding:0;font-size:20px;position:absolute;right:20px;color:#ccc;font-weight:lighter;cursor:pointer}aside.svelte-1k5ryxn .box main.svelte-1k5ryxn{padding:20px}aside.svelte-1k5ryxn .box footer.svelte-1k5ryxn{display:flex;justify-content:space-between;align-items:center;padding:20px;background:hsl(0, 10%, 96%);border-radius:0 0 9px 9px;box-shadow:inset 0px -1px 0px 1px hsla(0, 0%, 100%, 0.63)}",
	map: "{\"version\":3,\"file\":\"Modal.svelte\",\"sources\":[\"Modal.svelte\"],\"sourcesContent\":[\"\\t\\t\\t<script>\\r\\n  // imports\\r\\n  import { afterUpdate } from 'svelte';\\r\\n  import { fade, scale, fly } from 'svelte/transition';\\r\\n\\timport { cubicIn, cubicOut  } from \\\"svelte/easing\\\"; // animate values\\r\\n\\timport Button from './Button.svelte';\\r\\n\\r\\n  // public props\\r\\n  export let triggerRef = undefined;\\r\\n  export let showModal = false;\\r\\n  export let title = 'Modal title';\\r\\n  export let role = 'dialog';\\r\\n\\r\\n  // local props\\r\\n  let buttonRef;\\r\\n\\r\\n  // functions\\r\\n  const handleClose = () => (showModal = false);\\r\\n  const handleEsc = e => e.key === 'Escape' && handleClose();\\r\\n\\r\\n  // lifecycle\\r\\n  afterUpdate(() => {\\r\\n    if (showModal) {\\r\\n      buttonRef.focus();\\r\\n    } else {\\r\\n      triggerRef && triggerRef.focus();\\r\\n    }\\r\\n  });\\r\\n</script>\\r\\n\\r\\n<style>\\r\\n  aside {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    right: 0;\\r\\n    background: hsla(0, 9%, 96%, 0.81);\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    padding: 20px;\\r\\n    z-index: 10;\\r\\n  }\\r\\n\\r\\n  aside .box {\\r\\n    background: #fff;\\r\\n    width: 63vw;\\r\\n    max-width: 666px;\\r\\n    border-radius: 9px;\\r\\n    position: relative;\\r\\n    box-shadow: 0px 12px 15px 0px hsla(0, 0%, 0%, 0.18);\\r\\n  }\\r\\n\\r\\n  aside .box header {\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n    align-items: center;\\r\\n    padding: 20px;\\r\\n  }\\r\\n\\r\\n  aside .box header h3 {\\r\\n\\t\\tmargin: 0;\\r\\n\\t\\tfont-size: 23px;\\r\\n\\t\\tfont-weight: 500;\\r\\n  }\\r\\n\\r\\n  aside .box header button {\\r\\n    background: none;\\r\\n    border: none;\\r\\n    padding: 0;\\r\\n    font-size: 20px;\\r\\n    position: absolute;\\r\\n    right: 20px;\\r\\n    color: #ccc;\\r\\n    font-weight: lighter;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\n  aside .box main {\\r\\n    padding: 20px;\\r\\n  }\\r\\n\\r\\n  aside .box footer {\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n    align-items: center;\\r\\n    padding: 20px;\\r\\n\\t\\tbackground: hsl(0, 10%, 96%);\\r\\n\\t\\tborder-radius: 0 0 9px 9px;\\r\\n\\t\\tbox-shadow: inset 0px -1px 0px 1px hsla(0, 0%, 100%, 0.63);\\r\\n  }\\r\\n</style>\\r\\n\\r\\n{#if showModal}\\r\\n\\t<aside\\r\\n\\t\\t\\t\\t on:keydown=\\\"{handleEsc}\\\"\\r\\n\\t\\t\\t\\t aria-labelledby=\\\"modal-heading\\\"\\r\\n\\t\\t\\t\\t aria-modal=\\\"true\\\" tabIndex=\\\"{-1}\\\" role=\\\"{role}\\\"\\r\\n\\t\\t\\t\\t in:fade\\r\\n\\t\\t\\t\\t out:fade\\r\\n\\t\\t\\t\\t on:click|self=\\\"{handleClose}\\\"\\r\\n\\t\\t\\t\\t class=\\\"overlay\\\">\\r\\n\\r\\n\\t\\t<div in:scale=\\\"{{ start: 0.1, easing: cubicIn}}\\\" out:scale=\\\"{{start: 0.1, easing: cubicOut}}\\\" class=\\\"box\\\">\\r\\n\\t\\t\\t<header>\\r\\n\\t\\t\\t\\t<h3 id=\\\"modal-heading\\\">{title}</h3>\\r\\n\\t\\t\\t\\t<button aria-label='Close modal' bind:this=\\\"{buttonRef}\\\" on:click=\\\"{handleClose}\\\">&#10005;</button>\\r\\n\\t\\t\\t</header>\\r\\n\\t\\t\\t<main>\\r\\n\\t\\t\\t\\t<slot name=\\\"content\\\">No content provided</slot>\\r\\n\\t\\t\\t</main>\\r\\n\\t\\t\\t<footer>\\r\\n\\t\\t\\t\\t<slot />\\r\\n\\t\\t\\t</footer>\\r\\n\\t\\t</div>\\r\\n\\t</aside>\\r\\n{/if}\"],\"names\":[],\"mappings\":\"AA+BE,KAAK,eAAC,CAAC,AACL,QAAQ,CAAE,KAAK,CACf,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,CAAC,CACT,KAAK,CAAE,CAAC,CACR,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAClC,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,CACvB,OAAO,CAAE,IAAI,CACb,OAAO,CAAE,EAAE,AACb,CAAC,AAED,oBAAK,CAAC,IAAI,eAAC,CAAC,AACV,UAAU,CAAE,IAAI,CAChB,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,KAAK,CAChB,aAAa,CAAE,GAAG,CAClB,QAAQ,CAAE,QAAQ,CAClB,UAAU,CAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,AACrD,CAAC,AAED,oBAAK,CAAC,IAAI,CAAC,MAAM,eAAC,CAAC,AACjB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,WAAW,CAAE,MAAM,CACnB,OAAO,CAAE,IAAI,AACf,CAAC,AAED,oBAAK,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,eAAC,CAAC,AACtB,MAAM,CAAE,CAAC,CACT,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,GAAG,AAChB,CAAC,AAED,oBAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,eAAC,CAAC,AACxB,UAAU,CAAE,IAAI,CAChB,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,CAAC,CACV,SAAS,CAAE,IAAI,CACf,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,OAAO,CACpB,MAAM,CAAE,OAAO,AACjB,CAAC,AAED,oBAAK,CAAC,IAAI,CAAC,IAAI,eAAC,CAAC,AACf,OAAO,CAAE,IAAI,AACf,CAAC,AAED,oBAAK,CAAC,IAAI,CAAC,MAAM,eAAC,CAAC,AACjB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,WAAW,CAAE,MAAM,CACnB,OAAO,CAAE,IAAI,CACf,UAAU,CAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC5B,aAAa,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAC1B,UAAU,CAAE,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,AAC1D,CAAC\"}"
};

const Modal = api.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	

  // public props
  let { triggerRef = undefined, showModal = false, title = 'Modal title', role = 'dialog' } = $$props;

  // local props
  let buttonRef;

  // lifecycle
  api.afterUpdate(() => {
    if (showModal) {
      buttonRef.focus();
    } else {
      triggerRef && triggerRef.focus();
    }
  });

	if ($$props.triggerRef === void 0 && $$bindings.triggerRef && triggerRef !== void 0) $$bindings.triggerRef(triggerRef);
	if ($$props.showModal === void 0 && $$bindings.showModal && showModal !== void 0) $$bindings.showModal(showModal);
	if ($$props.title === void 0 && $$bindings.title && title !== void 0) $$bindings.title(title);
	if ($$props.role === void 0 && $$bindings.role && role !== void 0) $$bindings.role(role);

	$$result.css.add(css);

	return `${ showModal ? `<aside aria-labelledby="modal-heading" aria-modal="true"${api.add_attribute("tabIndex", -1, 0)}${api.add_attribute("role", role, 0)} class="overlay svelte-1k5ryxn">

			<div class="box svelte-1k5ryxn">
				<header class="svelte-1k5ryxn">
					<h3 id="modal-heading" class="svelte-1k5ryxn">${api.escape(title)}</h3>
					<button aria-label="Close modal" class="svelte-1k5ryxn"${api.add_attribute("this", buttonRef, 1)}>âœ•</button>
				</header>
				<main class="svelte-1k5ryxn">
					${$$slots.content ? $$slots.content({}) : `No content provided`}
				</main>
				<footer class="svelte-1k5ryxn">
					${$$slots.default ? $$slots.default({}) : ``}
				</footer>
			</div>
		</aside>` : `` }`;
});

/* src\components\UI\Logo.svelte generated by Svelte v3.12.1 */

const css$1 = {
	code: ".logo.svelte-x7mzl{z-index:10;cursor:pointer}.fixed.svelte-x7mzl{position:fixed;top:10px;left:10px}",
	map: "{\"version\":3,\"file\":\"Logo.svelte\",\"sources\":[\"Logo.svelte\"],\"sourcesContent\":[\"<script>\\r\\n\\texport let type = 'regular'; // full | regular | minimal | coin\\r\\n\\texport let color = 'gold'; // gold | bw\\r\\n\\texport let size = '36'; // in px\\r\\n\\texport let fixed = '';\\r\\n</script>\\r\\n\\r\\n<style lang='scss'>.logo {\\n  z-index: 10;\\n  cursor: pointer; }\\n\\n.fixed {\\n  position: fixed;\\n  top: 10px;\\n  left: 10px; }\\n</style>\\r\\n\\r\\n<img class=\\\"logo {fixed} {color}\\\" src=\\\"/images/logo/logo_{type}_{color}.svg\\\" width=\\\"{size}\\\" alt=\\\"CR logo\\\" on:click>\"],\"names\":[],\"mappings\":\"AAOmB,KAAK,aAAC,CAAC,AACxB,OAAO,CAAE,EAAE,CACX,MAAM,CAAE,OAAO,AAAE,CAAC,AAEpB,MAAM,aAAC,CAAC,AACN,QAAQ,CAAE,KAAK,CACf,GAAG,CAAE,IAAI,CACT,IAAI,CAAE,IAAI,AAAE,CAAC\"}"
};

const Logo = api.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { type = 'regular', color = 'gold', size = '36', fixed = '' } = $$props;

	if ($$props.type === void 0 && $$bindings.type && type !== void 0) $$bindings.type(type);
	if ($$props.color === void 0 && $$bindings.color && color !== void 0) $$bindings.color(color);
	if ($$props.size === void 0 && $$bindings.size && size !== void 0) $$bindings.size(size);
	if ($$props.fixed === void 0 && $$bindings.fixed && fixed !== void 0) $$bindings.fixed(fixed);

	$$result.css.add(css$1);

	return `<img class="logo ${api.escape(fixed)} ${api.escape(color)} svelte-x7mzl" src="/images/logo/logo_${api.escape(type)}_${api.escape(color)}.svg"${api.add_attribute("width", size, 0)} alt="CR logo">`;
});

/* src\routes\property\_Editor.svelte generated by Svelte v3.12.1 */

const css$2 = {
	code: ".edit-property.svelte-7fmaif{display:flex;justify-content:center;align-items:center;flex-direction:column;background:var(--color-light);padding:3rem 0}fieldset.svelte-7fmaif input[type=\"text\"].svelte-7fmaif,fieldset.svelte-7fmaif select.svelte-7fmaif,fieldset.svelte-7fmaif textarea.svelte-7fmaif{display:block;padding:0.6rem 0.81rem;font-size:1rem;line-height:1.25;color:var(--color-black);border:1px solid var(--color-white);border-radius:var(--border-radius);width:-webkit-fill-available;box-shadow:inset 0 3px 4px 0 var(--color-dark)}fieldset.svelte-7fmaif button{height:auto;width:100%}.section.svelte-7fmaif{display:grid;grid-template-columns:1fr;grid-template-rows:auto 1fr;grid-gap:1rem;padding:1rem 2rem 2rem;box-shadow:0 1px 0px var(--color-dark), 0 2px 0px var(--color-light)}.section.svelte-7fmaif .header p.svelte-7fmaif{color:var(--color-darker)}.section.svelte-7fmaif fieldset.svelte-7fmaif{border:0px dotted #e6e6e6;border-radius:var(--border-radius);margin:0 0 2rem}.section.svelte-7fmaif legend.svelte-7fmaif{text-transform:uppercase;font-size:0.81em;color:var(--color-dark)}@media(min-width: 768px){.section.svelte-7fmaif{grid-template-columns:minmax(auto, 270px) minmax(auto, 540px);grid-template-rows:1fr;grid-gap:2rem;padding:2rem}.section.svelte-7fmaif fieldset.svelte-7fmaif{margin:0 0 2rem}}.section_property_type.svelte-7fmaif .active.svelte-7fmaif{border:1px solid var(--color-success)}.section_property_type.svelte-7fmaif .removed.svelte-7fmaif{border:1px solid var(--color-danger)}.section_property_type.svelte-7fmaif .checkbox.svelte-7fmaif{display:inline-block}.section_property_type.svelte-7fmaif .checkbox.svelte-7fmaif:nth-child(odd){margin:0 1rem}.section_location.svelte-7fmaif .location input.svelte-7fmaif:first-of-type{border-bottom:0}.section_location.svelte-7fmaif .location input.svelte-7fmaif:last-of-type{border-top:0}.section_location.svelte-7fmaif .location.svelte-7fmaif img{width:100%;padding:1rem 0}.section_features.svelte-7fmaif .feature-list.svelte-7fmaif{margin:1rem 0}.section_features.svelte-7fmaif .feature.svelte-7fmaif{display:inline-flex;align-items:center;background:var(--color-white);color:var(--color-darker);border-radius:var(--border-radius);padding:0.2rem 0.4rem 0.2rem 0.2rem;margin:0.2rem;box-shadow:0 1px 2px var(--color-dark)}.section_features.svelte-7fmaif .feature .close.svelte-7fmaif{width:18px;height:18px;color:var(--color-dark);border-radius:var(--border-radius);margin-right:0.2rem;position:relative;box-sizing:border-box;cursor:pointer;font-style:normal;font-weight:bold}.section_features.svelte-7fmaif .feature .close.svelte-7fmaif::after{content:'x';font-size:0.6rem;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.section_features.svelte-7fmaif .description.svelte-7fmaif,.section_features.svelte-7fmaif .photos.svelte-7fmaif{grid-column:1 / -1}.section_features.svelte-7fmaif .photo-list.svelte-7fmaif{display:grid;grid-template-columns:repeat(auto-fit, minmax(auto, 120px));grid-gap:1rem;justify-content:center;margin:1rem 0}.section_features.svelte-7fmaif .photo.svelte-7fmaif{position:relative;box-shadow:0 1px 1px var(--color-white),\r\n\t\t\t\t\t\t\t\t0 2px 3px var(--color-darker);border-radius:var(--border-radius);text-align:center;display:flex;background-size:cover;height:120px}.section_features.svelte-7fmaif .photo .close.svelte-7fmaif{width:27px;height:27px;color:var(--color-danger);border:1px solid var(--color-danger);border-radius:50%;position:absolute;right:-9px;top:-9px;box-sizing:border-box;cursor:pointer;display:block;background:hsla(0, 0%, 100%, 0.81);font-style:normal}.section_features.svelte-7fmaif .photo .close.svelte-7fmaif::after{content:'x';position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}footer.buttons-group.svelte-7fmaif{display:flex;padding:2rem}@media(min-width: 768px){footer.buttons-group.svelte-7fmaif{justify-content:flex-end}footer.buttons-group.svelte-7fmaif button{flex:0 1 auto;width:333px}}",
	map: "{\"version\":3,\"file\":\"_Editor.svelte\",\"sources\":[\"_Editor.svelte\"],\"sourcesContent\":[\"<script>\\r\\n\\timport * as api from 'api.js';\\r\\n\\timport { goto } from '@sapper/app';\\r\\n\\timport { isAdmin, current, pattern, konami } from 'konami.js'; // to activate $isAdmin\\r\\n\\timport { isEmpty } from 'validation.js';\\r\\n\\t// import properties from \\\"../../properties-store.js\\\";\\r\\n\\timport Error from \\\"../../components/UI/Error.svelte\\\";\\r\\n\\timport Modal from \\\"../../components/UI/Modal.svelte\\\";\\r\\n\\timport Button from \\\"../../components/UI/Button.svelte\\\";\\r\\n\\timport Toggle from \\\"../../components/UI/Toggle.svelte\\\";\\r\\n\\timport Logo from '../../components/UI/Logo.svelte';\\r\\n\\timport StaticMap from \\\"../../components/Map/StaticMap.svelte\\\";\\r\\n\\r\\n\\texport let property;\\r\\n\\texport let query = false;\\r\\n\\texport let slug = false;\\r\\n\\r\\n\\tlet inProgress = false;\\r\\n\\tlet formIsValid = false;\\r\\n\\tlet showModal = false;\\r\\n\\tlet errors;\\r\\n\\r\\n\\t// workaround for empty photo and features array that are returned from firebase as string\\r\\n\\tif (property.photos === undefined || property.photos.length == 0) property.photos = [];\\r\\n\\tif (property.features === undefined || property.features.length == 0) property.features = [];\\r\\n\\r\\n\\t// const { session } = stores();\\r\\n\\t// console.log('session> ', session);\\r\\n\\t// console.log('$properties> ', $properties);\\r\\n\\r\\n\\t$: formIsValid =\\r\\n\\t\\t\\t!isEmpty(property.msl) &&\\r\\n\\t\\t\\t!isEmpty(property.property_for); // && isValidEmail(email);\\r\\n\\r\\n\\r\\n\\tfunction addFeature(input) {\\r\\n\\t\\tif (input.value == '') return;\\r\\n\\t\\tproperty.features = [...property.features, input.value];\\r\\n\\t\\tinput.value = '';\\r\\n\\t}\\r\\n\\tfunction removeFeature(index) {\\r\\n\\t\\tproperty.features = [...property.features.slice(0, index), ...property.features.slice(index + 1)];\\r\\n\\t}\\r\\n\\r\\n\\tfunction addPhoto(input) {\\r\\n\\t\\t// let valInput = /(https?:\\\\/\\\\/.*\\\\.(?:png|jpg|gif))/i;\\r\\n\\t\\t// if (!valInput.test(input.value)) return;\\r\\n\\t\\tif (input.value == '') return;\\r\\n\\t\\tproperty.photos = [...property.photos, input.value];\\r\\n\\t\\tinput.value = '';\\r\\n\\t}\\r\\n\\tfunction removePhoto(index) {\\r\\n\\t\\tproperty.photos = [...property.photos.slice(0, index), ...property.photos.slice(index + 1)];\\r\\n\\t}\\r\\n\\r\\n\\t// Helper function to allow on Enter events for AddFeature, AddPhoto\\r\\n\\tfunction enter(node, callback) {\\r\\n\\t\\tfunction onkeydown(event) {\\r\\n\\t\\t\\tif (event.which === 13) callback(node);\\r\\n\\t\\t}\\r\\n\\t\\tnode.addEventListener('keydown', onkeydown);\\r\\n\\t\\treturn {\\r\\n\\t\\t\\tdestroy() {\\r\\n\\t\\t\\t\\tnode.removeEventListener('keydown', onkeydown);\\r\\n\\t\\t\\t}\\r\\n\\t\\t};\\r\\n\\t}\\r\\n\\r\\n\\tasync function publish() {\\r\\n\\t\\tinProgress = true;\\r\\n\\r\\n\\t\\tconst response = await (slug\\r\\n\\t\\t\\t? api.patch(`cariari/${slug}.json`, {...property, date_updated: new Date()}, null)\\r\\n\\t\\t\\t: api.post(`cariari.json`, property, null));\\r\\n\\r\\n\\t\\t\\tconsole.log('response: ', response)\\r\\n\\t\\tif (response.name) {\\r\\n\\t\\t\\t// Add new property to properties store\\r\\n\\t\\t\\t// properties.addProperty({...property, id: response.name}); // ðŸš©ðŸš©ðŸš©FIXIT\\r\\n\\r\\n\\t\\t\\t// page with QR code for printing\\r\\n\\t\\t\\tgoto(`property/${response.name}?qr=true`);\\r\\n\\t\\t} else {\\r\\n\\t\\t\\t// update store with modified property by slug as id/name\\r\\n\\t\\t\\t// properties.updateProperty(slug, response); // ðŸš©ðŸš©ðŸš©FIXIT\\r\\n\\t\\t\\t// console.log('$properties> ', $properties);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tinProgress = false;\\r\\n\\t}\\r\\n\\r\\n\\tasync function remove() {\\r\\n\\t\\tinProgress = true;\\r\\n\\r\\n\\t\\tconst response = await (slug && $isAdmin\\r\\n\\t\\t\\t? api.del(`cariari/${slug}.json`, null)\\r\\n\\t\\t\\t: api.patch(`cariari/${slug}.json`, {...property, is_active: false, date_updated: new Date()}, null));\\r\\n\\r\\n\\t\\t\\tconsole.log('response: ', response)\\r\\n\\t\\tif (response) {\\r\\n\\t\\t\\t// Client removed property from being listed (is_active:false)\\r\\n\\t\\t\\t// â¬œ update store is_active to false\\r\\n\\t\\t\\talert('Your propert has been removed! Thank you for using our service. If  you would like to relist, please contact us at contact@cariari.realty');\\r\\n\\t\\t\\tgoto(`/`);\\r\\n\\t\\t} else {\\r\\n\\t\\t\\t// admin deleted property from db\\r\\n\\t\\t\\t// â¬œ remove property from store\\r\\n\\t\\t\\t// âœ” redirect to /property/\\r\\n\\t\\t\\tgoto(`property`);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tinProgress = false;\\r\\n\\t}\\r\\n\\r\\n\\tasync function getMsl() {\\r\\n\\t\\tconst response = await api.get(`cariari.json`, null);\\r\\n\\t\\tlet digits = [];\\r\\n\\t\\tfor (let [key, value] of Object.entries(response)) {\\r\\n\\t\\t\\tdigits = [...digits, Number(value.msl.substring(3))];\\r\\n\\t\\t\\t// console.log(digits);\\r\\n\\t\\t}\\r\\n\\t\\tproperty.msl = `CR-${ Math.max(...digits) + 1 }`;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getPosition() {\\r\\n\\t\\tif (navigator.geolocation) {\\r\\n\\t\\t\\tnavigator.geolocation.getCurrentPosition(function(position) {\\r\\n\\t\\t\\t\\tproperty.location.lat = position.coords.latitude;\\r\\n\\t\\t\\t\\tproperty.location.lng = position.coords.longitude;\\r\\n\\t\\t\\t\\t// console.log('position> ', position);\\r\\n\\t\\t\\t}, function() {\\r\\n\\t\\t\\t\\tconsole.log('FAILED TO GET POSITION');\\r\\n\\t\\t\\t}, { enableHighAccuracy: true, timeout: 5000, maximumAge: 0 });\\r\\n\\t\\t} else {\\r\\n\\t\\t\\t// Browser doesn't support Geolocation\\r\\n\\t\\t\\tconsole.log('YOUR BROWSER DOESN\\\"T SUPPORT NAVIGATION');\\r\\n\\t\\t}\\r\\n\\t}\\r\\n</script>\\r\\n\\r\\n\\r\\n<style>\\r\\n\\t.edit-property {\\r\\n\\t\\tdisplay: flex;\\r\\n\\t\\tjustify-content: center;\\r\\n\\t\\talign-items: center;\\r\\n\\t\\tflex-direction: column;\\r\\n\\t\\tbackground: var(--color-light);\\r\\n\\t\\tpadding: 3rem 0;\\r\\n\\t\\t/* flex-wrap: wrap; */\\r\\n\\t}\\r\\n\\r\\n\\tfieldset input[type=\\\"text\\\"],\\r\\n\\tfieldset select,\\r\\n\\tfieldset textarea {\\r\\n\\t\\tdisplay: block;\\r\\n\\t\\tpadding: 0.6rem 0.81rem;\\r\\n\\t\\tfont-size: 1rem;\\r\\n\\t\\tline-height: 1.25;\\r\\n\\t\\tcolor: var(--color-black);\\r\\n\\t\\tborder: 1px solid var(--color-white);\\r\\n\\t\\tborder-radius: var(--border-radius);\\r\\n\\t\\twidth: -webkit-fill-available;\\r\\n\\t\\tbox-shadow: inset 0 3px 4px 0 var(--color-dark);\\r\\n\\t}\\r\\n\\tfieldset :global(button) {\\r\\n\\t\\theight: auto;\\r\\n\\t\\twidth: 100%;\\r\\n\\t}\\r\\n\\r\\n\\t.section {\\r\\n\\t\\tdisplay: grid;\\r\\n\\t\\tgrid-template-columns: 1fr;\\r\\n\\t\\tgrid-template-rows: auto 1fr;\\r\\n\\t\\tgrid-gap: 1rem;\\r\\n\\t\\tpadding: 1rem 2rem 2rem;\\r\\n\\t\\tbox-shadow: 0 1px 0px var(--color-dark), 0 2px 0px var(--color-light);\\r\\n\\t}\\r\\n\\t.section .header p { color: var(--color-darker); }\\r\\n\\t.section fieldset {\\r\\n\\t\\tborder: 0px dotted #e6e6e6;\\r\\n\\t\\tborder-radius: var(--border-radius);\\r\\n\\t\\tmargin: 0 0 2rem;\\r\\n\\t}\\r\\n\\t.section legend {\\r\\n\\t\\ttext-transform: uppercase;\\r\\n\\t\\tfont-size: 0.81em;\\r\\n\\t\\tcolor: var(--color-dark);\\r\\n\\t}\\r\\n\\r\\n\\t@media (min-width: 768px) {\\r\\n\\t\\t.section {\\r\\n\\t\\t\\tgrid-template-columns: minmax(auto, 270px) minmax(auto, 540px);\\r\\n\\t\\t\\tgrid-template-rows: 1fr;\\r\\n\\t\\t\\tgrid-gap: 2rem;\\r\\n\\t\\t\\tpadding: 2rem;\\r\\n\\t\\t}\\r\\n\\t\\t.section fieldset { margin: 0 0 2rem; }\\r\\n\\t}\\r\\n\\r\\n\\t.section_property_type .active { border: 1px solid var(--color-success); }\\r\\n\\t.section_property_type .removed { border: 1px solid var(--color-danger); }\\r\\n\\t.section_property_type .checkbox { display: inline-block; }\\r\\n\\t.section_property_type .checkbox:nth-child(odd) { margin: 0 1rem; }\\r\\n\\r\\n\\t.section_location .location input:first-of-type { border-bottom: 0; }\\r\\n\\t.section_location .location input:last-of-type { border-top: 0; }\\r\\n\\t.section_location .location :global(img) {\\r\\n\\t\\twidth: 100%;\\r\\n\\t\\tpadding: 1rem 0;\\r\\n\\t}\\r\\n\\r\\n\\t.section_features .feature-list { margin: 1rem 0; }\\r\\n\\t.section_features .feature {\\r\\n\\t\\tdisplay: inline-flex;\\r\\n\\t\\talign-items: center;\\r\\n\\t\\tbackground: var(--color-white);\\r\\n\\t\\tcolor: var(--color-darker);\\r\\n\\t\\tborder-radius: var(--border-radius);\\r\\n\\t\\tpadding: 0.2rem 0.4rem 0.2rem 0.2rem;\\r\\n\\t\\tmargin: 0.2rem;\\r\\n\\t\\tbox-shadow: 0 1px 2px var(--color-dark);\\r\\n\\t}\\r\\n\\t.section_features .feature .close {\\r\\n\\t\\twidth: 18px;\\r\\n\\t\\theight: 18px;\\r\\n\\t\\tcolor: var(--color-dark);\\r\\n\\t\\tborder-radius: var(--border-radius);\\r\\n\\t\\tmargin-right: 0.2rem;\\r\\n\\t\\tposition: relative;\\r\\n\\t\\tbox-sizing: border-box;\\r\\n\\t\\tcursor: pointer;\\r\\n\\t\\tfont-style: normal;\\r\\n\\t\\tfont-weight: bold;\\r\\n\\t}\\r\\n\\t.section_features .feature .close::after {\\r\\n\\t\\tcontent: 'x';\\r\\n\\t\\tfont-size: 0.6rem;\\r\\n\\t\\tposition: absolute;\\r\\n\\t\\ttop: 50%;\\r\\n\\t\\tleft: 50%;\\r\\n\\t\\ttransform: translate(-50%, -50%);\\r\\n\\t}\\r\\n\\t.section_features .description,\\r\\n\\t.section_features .photos { grid-column: 1 / -1; }\\r\\n\\t.section_features .photo-list {\\r\\n\\t\\tdisplay: grid;\\r\\n\\t\\tgrid-template-columns: repeat(auto-fit, minmax(auto, 120px));\\r\\n\\t\\t/* grid-template-rows: repeat(auto-fit, minmax(90px, 120px)); */\\r\\n\\t\\tgrid-gap: 1rem;\\r\\n\\t\\tjustify-content: center;\\r\\n\\t\\tmargin: 1rem 0;\\r\\n\\t}\\r\\n\\t.section_features .photo {\\r\\n\\t\\tposition: relative;\\r\\n\\t\\tbox-shadow: 0 1px 1px var(--color-white),\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t0 2px 3px var(--color-darker);\\r\\n\\t\\tborder-radius: var(--border-radius);\\r\\n\\t\\ttext-align: center;\\r\\n\\t\\tdisplay: flex;\\r\\n\\t\\tbackground-size: cover;\\r\\n\\t\\theight: 120px;\\r\\n\\t}\\r\\n\\t.section_features .photo .close {\\r\\n\\t\\twidth: 27px;\\r\\n\\t\\theight: 27px;\\r\\n\\t\\tcolor: var(--color-danger);\\r\\n\\t\\tborder: 1px solid var(--color-danger);\\r\\n\\t\\tborder-radius: 50%;\\r\\n\\t\\tposition: absolute;\\r\\n\\t\\tright: -9px;\\r\\n\\t\\ttop: -9px;\\r\\n\\t\\tbox-sizing: border-box;\\r\\n\\t\\tcursor: pointer;\\r\\n\\t\\tdisplay: block;\\r\\n\\t\\tbackground: hsla(0, 0%, 100%, 0.81);\\r\\n\\t\\tfont-style: normal;\\r\\n\\t}\\r\\n\\t.section_features .photo .close::after {\\r\\n\\t\\tcontent: 'x';\\r\\n\\t\\tposition: absolute;\\r\\n\\t\\ttop: 50%;\\r\\n\\t\\tleft: 50%;\\r\\n\\t\\ttransform: translate(-50%, -50%);\\r\\n\\t}\\r\\n\\r\\n\\tfooter.buttons-group {\\r\\n\\t\\tdisplay: flex;\\r\\n\\t\\tpadding: 2rem;\\r\\n\\t}\\r\\n\\t@media (min-width: 768px) {\\r\\n\\t\\tfooter.buttons-group { justify-content: flex-end; }\\r\\n\\t\\tfooter.buttons-group :global(button) {\\r\\n\\t\\t\\tflex: 0 1 auto;\\r\\n\\t\\t\\twidth: 333px;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n</style>\\r\\n\\r\\n<svelte:window on:keydown=\\\"{konami}\\\"/>\\r\\n\\r\\n<svelte:head>\\r\\n\\t{#if slug}\\r\\n\\t\\t<title>Edit {property.msl}</title>\\r\\n\\t{:else}\\r\\n\\t\\t<title>Add new property</title>\\r\\n\\t{/if}\\r\\n</svelte:head>\\r\\n\\r\\n{#if errors}\\r\\n\\t<Error message=\\\"{errors.message}\\\" />\\r\\n{/if}\\r\\n\\r\\n<Logo type=\\\"regular\\\" color=\\\"bw\\\" fixed=\\\"fixed\\\" on:click=\\\"{() => goto('/')}\\\" />\\r\\n\\r\\n<section class=\\\"edit-property\\\">\\r\\n\\r\\n\\t<div class=\\\"sections_wrap\\\">\\r\\n\\t\\t<!-- PROPERTY TYPE -->\\r\\n\\t\\t<section class=\\\"section section_property_type\\\">\\r\\n\\t\\t\\t<div class=\\\"header\\\">\\r\\n\\t\\t\\t\\t<h3>Property type</h3>\\r\\n\\t\\t\\t\\t<p>Categories listing in appropriate section and coloring on the map. Is part of filtering.</p>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"inputs\\\">\\r\\n\\t\\t\\t\\t{#if $isAdmin}\\r\\n\\t\\t\\t\\t<fieldset>\\r\\n\\t\\t\\t\\t\\t<legend>Active</legend>\\r\\n\\t\\t\\t\\t\\t<!-- <input type=\\\"text\\\" placeholder=\\\"ex: true\\\" bind:value=\\\"{property.is_active}\\\" disabled=\\\"{!$isAdmin}\\\"> -->\\r\\n\\t\\t\\t\\t\\t<Toggle bind:checked=\\\"{property.is_active}\\\" label=\\\"{property.is_active ? 'Listed' : 'Delisted'}\\\" disabled=\\\"{!$isAdmin}\\\" />\\r\\n\\t\\t\\t\\t</fieldset>\\r\\n\\t\\t\\t\\t{/if}\\r\\n\\r\\n\\t\\t\\t\\t<fieldset class=\\\"{property.is_active ? 'active' : 'removed'}\\\">\\r\\n\\t\\t\\t\\t\\t<legend>MSL</legend>\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"ex: CR-001\\\" bind:value=\\\"{property.msl}\\\" disabled=\\\"{query.msl}\\\" />\\r\\n\\t\\t\\t\\t\\t{#if !property.msl}\\r\\n\\t\\t\\t\\t\\t<Button type=\\\"button\\\" on:click=\\\"{getMsl}\\\">Set</Button>\\r\\n\\t\\t\\t\\t\\t{/if}\\r\\n\\t\\t\\t\\t</fieldset>\\r\\n\\r\\n\\t\\t\\t\\t<fieldset>\\r\\n\\t\\t\\t\\t\\t<legend>Land Use</legend>\\r\\n\\t\\t\\t\\t\\t<select bind:value=\\\"{property.land_use}\\\" disabled=\\\"{query.msl}\\\">\\r\\n\\t\\t\\t\\t\\t\\t<option>Residential</option>\\r\\n\\t\\t\\t\\t\\t\\t<option>Commercial</option>\\r\\n\\t\\t\\t\\t\\t\\t<option>Industrial</option>\\r\\n\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t</fieldset>\\r\\n\\r\\n\\t\\t\\t\\t<fieldset>\\r\\n\\t\\t\\t\\t\\t<legend>Property For</legend>\\r\\n\\t\\t\\t\\t\\t<label class=\\\"checkbox\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" bind:group=\\\"{property.property_for}\\\" value=\\\"Rent\\\"><span>Rent</span>\\r\\n\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t<label class=\\\"checkbox\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" bind:group=\\\"{property.property_for}\\\" value=\\\"Sale\\\"><span>Sale</span>\\r\\n\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t<label class=\\\"checkbox\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" bind:group=\\\"{property.property_for}\\\" value=\\\"Investment\\\"><span>Investment</span>\\r\\n\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t</fieldset>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</section>\\r\\n\\r\\n\\t\\t<!-- PROPERTY LOCATION -->\\r\\n\\t\\t<section class=\\\"section section_location\\\">\\r\\n\\t\\t\\t<div class=\\\"header\\\">\\r\\n\\t\\t\\t\\t<h3>Location</h3>\\r\\n\\t\\t\\t\\t<p>GPS coordinates and physical address. Location displayed on map via GPS, accuracy is important.</p>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"inputs\\\">\\r\\n\\t\\t\\t\\t<fieldset>\\r\\n\\t\\t\\t\\t\\t<legend>Address</legend>\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"ex: Avenida 52, Provincia Heredia, La AsunciÃ³n, 40703\\\" bind:value=\\\"{property.address}\\\">\\r\\n\\t\\t\\t\\t</fieldset>\\r\\n\\r\\n\\t\\t\\t\\t<fieldset class=\\\"location\\\">\\r\\n\\t\\t\\t\\t\\t<legend>Location (lat, lng)</legend>\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"ex: 9.97542\\\" bind:value=\\\"{property.location.lat}\\\" disabled=\\\"{query.msl}\\\">\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"ex: -84.163443\\\" bind:value=\\\"{property.location.lng}\\\" disabled=\\\"{query.msl}\\\">\\r\\n\\t\\t\\t\\t\\t{#if !query.msl}\\r\\n\\t\\t\\t\\t\\t<Button type=\\\"button\\\" on:click=\\\"{getPosition}\\\">Get current GPS</Button>\\r\\n\\t\\t\\t\\t\\t{/if}\\r\\n\\r\\n\\t\\t\\t\\t\\t{#if property.location.lat && property.location.lng}\\r\\n\\t\\t\\t\\t\\t<StaticMap lat=\\\"{property.location.lat}\\\" lon=\\\"{property.location.lng}\\\" zoom=\\\"15\\\" marker=\\\"https://i.imgur.com/gA01omN.png\\\" />\\r\\n\\t\\t\\t\\t\\t{/if}\\r\\n\\t\\t\\t\\t</fieldset>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</section>\\r\\n\\r\\n\\t\\t<!-- PROPERTY CONTACTS -->\\r\\n\\t\\t<section class=\\\"section section_contacts\\\">\\r\\n\\t\\t\\t<div class=\\\"header\\\">\\r\\n\\t\\t\\t\\t<h3>Contacts</h3>\\r\\n\\t\\t\\t\\t<p>Email and Phone number of a realtor or person selling the property, usually found on a placard in front of the property.</p>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"inputs\\\">\\r\\n\\t\\t\\t\\t<fieldset>\\r\\n\\t\\t\\t\\t\\t<legend>Phone</legend>\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"ex: 1234-5678\\\" bind:value=\\\"{property.contact_phone}\\\">\\r\\n\\t\\t\\t\\t</fieldset>\\r\\n\\r\\n\\t\\t\\t\\t<fieldset>\\r\\n\\t\\t\\t\\t\\t<legend>Email</legend>\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"ex: this@that.there\\\" bind:value=\\\"{property.contact_email}\\\">\\r\\n\\t\\t\\t\\t</fieldset>\\r\\n\\r\\n\\t\\t\\t\\t<fieldset>\\r\\n\\t\\t\\t\\t\\t<legend>Realtor</legend>\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"ex: Re/Max or Jane Doe\\\" bind:value=\\\"{property.contact_realtor}\\\">\\r\\n\\t\\t\\t\\t</fieldset>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</section>\\r\\n\\r\\n\\t\\t<!-- PROPERTY BASICS -->\\r\\n\\t\\t<section class=\\\"section section_basics\\\">\\r\\n\\t\\t\\t<div class=\\\"header\\\">\\r\\n\\t\\t\\t\\t<h3>Basics</h3>\\r\\n\\t\\t\\t\\t<p>These are initial values and usually first thing user looks for when narrowing down their options.</p>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"inputs\\\">\\r\\n\\t\\t\\t\\t<fieldset>\\r\\n\\t\\t\\t\\t\\t<legend>Year built</legend>\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"ex: 2019\\\" bind:value=\\\"{property.year_built}\\\">\\r\\n\\t\\t\\t\\t</fieldset>\\r\\n\\r\\n\\t\\t\\t\\t<fieldset>\\r\\n\\t\\t\\t\\t\\t<legend>Building Style</legend>\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"ex: 2 Storey\\\" bind:value=\\\"{property.building_style}\\\">\\r\\n\\t\\t\\t\\t</fieldset>\\r\\n\\r\\n\\t\\t\\t\\t<fieldset>\\r\\n\\t\\t\\t\\t\\t<legend>Lot Size ãŽ¡</legend>\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"ex: 900\\\" bind:value=\\\"{property.lot_size}\\\">\\r\\n\\t\\t\\t\\t</fieldset>\\r\\n\\r\\n\\t\\t\\t\\t<fieldset>\\r\\n\\t\\t\\t\\t\\t<legend>Building Size ãŽ¡</legend>\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"ex: 810\\\" bind:value=\\\"{property.building_size}\\\">\\r\\n\\t\\t\\t\\t</fieldset>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</section>\\r\\n\\r\\n\\t\\t<!-- PROPERTY DETAILS -->\\r\\n\\t\\t<section class=\\\"section section_details\\\">\\r\\n\\t\\t\\t<div class=\\\"header\\\">\\r\\n\\t\\t\\t\\t<h3>Details</h3>\\r\\n\\t\\t\\t\\t<p>Information important to the user and thus should be filled in as soon as possible. Also used in filters.</p>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"inputs\\\">\\r\\n\\t\\t\\t\\t<fieldset>\\r\\n\\t\\t\\t\\t\\t<legend>Bedrooms</legend>\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"ex: 3\\\" bind:value=\\\"{property.beds_count}\\\">\\r\\n\\t\\t\\t\\t</fieldset>\\r\\n\\r\\n\\t\\t\\t\\t<fieldset>\\r\\n\\t\\t\\t\\t\\t<legend>Bathrooms</legend>\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"ex: 3\\\" bind:value=\\\"{property.baths_count}\\\">\\r\\n\\t\\t\\t\\t</fieldset>\\r\\n\\r\\n\\t\\t\\t\\t<fieldset>\\r\\n\\t\\t\\t\\t\\t<legend>Restrooms (half-baths)</legend>\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"ex: 2\\\" bind:value=\\\"{property.half_baths_count}\\\">\\r\\n\\t\\t\\t\\t</fieldset>\\r\\n\\r\\n\\t\\t\\t\\t<fieldset>\\r\\n\\t\\t\\t\\t\\t<legend>Rooms</legend>\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"ex: 6\\\" bind:value=\\\"{property.rooms_count}\\\">\\r\\n\\t\\t\\t\\t</fieldset>\\r\\n\\r\\n\\t\\t\\t\\t<fieldset>\\r\\n\\t\\t\\t\\t\\t<legend>Parking Spaces</legend>\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"ex: 9\\\" bind:value=\\\"{property.parking_spaces}\\\">\\r\\n\\t\\t\\t\\t</fieldset>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</section>\\r\\n\\r\\n\\t\\t<!-- PROPERTY PRICING -->\\r\\n\\t\\t<section class=\\\"section section_pricing\\\">\\r\\n\\t\\t\\t<div class=\\\"header\\\">\\r\\n\\t\\t\\t\\t<h3>Pricing</h3>\\r\\n\\t\\t\\t\\t<p>Everything regarding money goes in here and is very important since used in filters and relevent to user.</p>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"inputs\\\">\\r\\n\\t\\t\\t\\t<fieldset>\\r\\n\\t\\t\\t\\t\\t<legend>Price $</legend>\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"ex: 630000\\\" bind:value=\\\"{property.price}\\\">\\r\\n\\t\\t\\t\\t</fieldset>\\r\\n\\r\\n\\t\\t\\t\\t<fieldset>\\r\\n\\t\\t\\t\\t\\t<legend>Rent ($/month)</legend>\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"ex: 1800\\\" bind:value=\\\"{property.rent}\\\">\\r\\n\\t\\t\\t\\t</fieldset>\\r\\n\\r\\n\\t\\t\\t\\t<fieldset>\\r\\n\\t\\t\\t\\t\\t<legend>Taxes ($/year)</legend>\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"ex: 1500\\\" bind:value=\\\"{property.taxes}\\\">\\r\\n\\t\\t\\t\\t</fieldset>\\r\\n\\r\\n\\t\\t\\t\\t<fieldset>\\r\\n\\t\\t\\t\\t\\t<legend>Fees (condo, asssociation) ($/month)</legend>\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"ex: 120\\\" bind:value=\\\"{property.fees}\\\">\\r\\n\\t\\t\\t\\t</fieldset>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</section>\\r\\n\\r\\n\\t\\t<!-- PROPERTY FEATURES -->\\r\\n\\t\\t<section class=\\\"section section_features\\\">\\r\\n\\t\\t\\t<div class=\\\"header\\\">\\r\\n\\t\\t\\t\\t<h3>Features</h3>\\r\\n\\t\\t\\t\\t<p>Description, features, photos. Photos are important and good quality should be provided.</p>\\r\\n\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t<div class=\\\"inputs\\\">\\r\\n\\t\\t\\t\\t<fieldset>\\r\\n\\t\\t\\t\\t\\t<legend>Features</legend>\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"ex: BBQ\\\" use:enter={addFeature}>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"feature-list\\\">\\r\\n\\t\\t\\t\\t\\t\\t{#each property.features as feature, i}\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"feature\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"close\\\" on:click=\\\"{() => removeFeature(i)}\\\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{feature}\\r\\n\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t\\t{/each}\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</fieldset>\\r\\n\\r\\n\\t\\t\\t\\t<fieldset class=\\\"description\\\">\\r\\n\\t\\t\\t\\t\\t<legend>Description</legend>\\r\\n\\t\\t\\t\\t\\t<textarea rows=\\\"6\\\" placeholder=\\\"Description (max 9 sentences)\\\" bind:value=\\\"{property.description}\\\"></textarea>\\r\\n\\t\\t\\t\\t</fieldset>\\r\\n\\r\\n\\t\\t\\t\\t<fieldset class=\\\"photos\\\">\\r\\n\\t\\t\\t\\t\\t<legend>Photos</legend>\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" placeholder=\\\"ex: //placekitten.com/g/1080/810\\\" use:enter={addPhoto}>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"photo-list\\\">\\r\\n\\t\\t\\t\\t\\t\\t{#each property.photos as photo, i}\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"photo\\\" style=\\\"background-image: url({photo})\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"close\\\" on:click=\\\"{() => removePhoto(i)}\\\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- <img class=\\\"preview\\\" src=\\\"{photo}\\\" alt=\\\"{photo}\\\"> -->\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t{/each}\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</fieldset>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</section>\\r\\n\\r\\n\\t\\t<!-- BUTTONS -->\\r\\n\\t\\t<footer class=\\\"buttons-group\\\">\\r\\n\\t\\t\\t{#if slug && property.is_active && !$isAdmin}\\r\\n\\t\\t\\t\\t<Button type=\\\"button\\\" color=\\\"danger\\\" disabled={inProgress} on:click=\\\"{() => showModal = true}\\\">Remove</Button>\\r\\n\\t\\t\\t{/if}\\r\\n\\t\\t\\t{#if slug && $isAdmin}\\r\\n\\t\\t\\t\\t<Button type=\\\"button\\\" color=\\\"danger\\\" disabled={inProgress} on:click=\\\"{() => showModal = true}\\\">Delete</Button>\\r\\n\\t\\t\\t{/if}\\r\\n\\r\\n\\t\\t\\t{#if slug && $isAdmin}\\r\\n\\t\\t\\t\\t<Button type=\\\"button\\\" disabled={inProgress} on:click=\\\"{() => { goto(`/property/${slug}?qr=true`) }}\\\">Print</Button>\\r\\n\\t\\t\\t{/if}\\r\\n\\r\\n\\t\\t\\t<Button type=\\\"button\\\" color=\\\"black\\\" disabled={inProgress || !formIsValid} on:click=\\\"{publish}\\\">\\r\\n\\t\\t\\t\\t{#if slug}\\r\\n\\t\\t\\t\\t\\tSubmit Changes\\r\\n\\t\\t\\t\\t{:else}\\r\\n\\t\\t\\t\\t\\tAdd Property\\r\\n\\t\\t\\t\\t{/if}\\r\\n\\t\\t\\t</Button>\\r\\n\\t\\t</footer>\\r\\n\\t</div>\\r\\n</section>\\r\\n\\r\\n<!-- CONFIRMATION MODAL -->\\r\\n<Modal title=\\\"Delete listing?\\\" bind:showModal>\\r\\n\\t<div slot=\\\"content\\\">\\r\\n\\t\\tAre you sure you want to delete this listing? By doing this, all data will be permenantly deleted.\\r\\n\\t</div>\\r\\n\\t<Button mode=\\\"clean\\\" on:click={() => showModal = false}>Cancel</Button>\\r\\n\\t<Button mode=\\\"danger\\\"  on:click={() => { showModal = false; remove() }}>Confirm</Button>\\r\\n</Modal>\"],\"names\":[],\"mappings\":\"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\"}"
};

const Editor = api.create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let $isAdmin = api.get_store_value(Toggle.isAdmin);

	

	let { property, query = false, slug = false } = $$props;

	let inProgress = false;
	let formIsValid = false;
	let showModal = false;

	// workaround for empty photo and features array that are returned from firebase as string
	if (property.photos === undefined || property.photos.length == 0) property.photos = [];
	if (property.features === undefined || property.features.length == 0) property.features = []; // && isValidEmail(email);

	if ($$props.property === void 0 && $$bindings.property && property !== void 0) $$bindings.property(property);
	if ($$props.query === void 0 && $$bindings.query && query !== void 0) $$bindings.query(query);
	if ($$props.slug === void 0 && $$bindings.slug && slug !== void 0) $$bindings.slug(slug);

	$$result.css.add(css$2);

	let $$settled;
	let $$rendered;

	do {
		$$settled = true;



		formIsValid =
					!isEmpty(property.msl) &&
					!isEmpty(property.property_for);

		$$rendered = `

		${($$result.head += `${ slug ? `<title>Edit ${api.escape(property.msl)}</title>` : `<title>Add new property</title>` }`, "")}

		${  `` }

		${api.validate_component(Logo, 'Logo').$$render($$result, {
			type: "regular",
			color: "bw",
			fixed: "fixed"
		}, {}, {})}

		<section class="edit-property svelte-7fmaif">

			<div class="sections_wrap">

				<section class="section section_property_type svelte-7fmaif">
					<div class="header">
						<h3>Property type</h3>
						<p class="svelte-7fmaif">Categories listing in appropriate section and coloring on the map. Is part of filtering.</p>
					</div>

					<div class="inputs">
						${ $isAdmin ? `<fieldset class="svelte-7fmaif">
							<legend class="svelte-7fmaif">Active</legend>

							${api.validate_component(Toggle.Toggle, 'Toggle').$$render($$result, {
			label: property.is_active ? 'Listed' : 'Delisted',
			disabled: !$isAdmin,
			checked: property.is_active
		}, {
			checked: $$value => { property.is_active = $$value; $$settled = false; }
		}, {})}
						</fieldset>` : `` }

						<fieldset class="${api.escape(api.null_to_empty(property.is_active ? 'active' : 'removed'))} svelte-7fmaif">
							<legend class="svelte-7fmaif">MSL</legend>
							<input type="text" placeholder="ex: CR-001"${query.msl ? " disabled" : "" } class="svelte-7fmaif"${api.add_attribute("value", property.msl, 1)}>
							${ !property.msl ? `${api.validate_component(api.Button, 'Button').$$render($$result, { type: "button" }, {}, { default: () => `Set` })}` : `` }
						</fieldset>

						<fieldset class="svelte-7fmaif">
							<legend class="svelte-7fmaif">Land Use</legend>
							<select${query.msl ? " disabled" : "" } class="svelte-7fmaif"${api.add_attribute("value", property.land_use, 1)}>
								<option value="Residential">Residential</option>
								<option value="Commercial">Commercial</option>
								<option value="Industrial">Industrial</option>
							</select>
						</fieldset>

						<fieldset class="svelte-7fmaif">
							<legend class="svelte-7fmaif">Property For</legend>
							<label class="checkbox svelte-7fmaif">
								<input type="checkbox" value="Rent"><span>Rent</span>
							</label>
							<label class="checkbox svelte-7fmaif">
								<input type="checkbox" value="Sale"><span>Sale</span>
							</label>
							<label class="checkbox svelte-7fmaif">
								<input type="checkbox" value="Investment"><span>Investment</span>
							</label>
						</fieldset>
					</div>
				</section>


				<section class="section section_location svelte-7fmaif">
					<div class="header">
						<h3>Location</h3>
						<p class="svelte-7fmaif">GPS coordinates and physical address. Location displayed on map via GPS, accuracy is important.</p>
					</div>

					<div class="inputs">
						<fieldset class="svelte-7fmaif">
							<legend class="svelte-7fmaif">Address</legend>
							<input type="text" placeholder="ex: Avenida 52, Provincia Heredia, La AsunciÃ³n, 40703" class="svelte-7fmaif"${api.add_attribute("value", property.address, 1)}>
						</fieldset>

						<fieldset class="location svelte-7fmaif">
							<legend class="svelte-7fmaif">Location (lat, lng)</legend>
							<input type="text" placeholder="ex: 9.97542"${query.msl ? " disabled" : "" } class="svelte-7fmaif"${api.add_attribute("value", property.location.lat, 1)}>
							<input type="text" placeholder="ex: -84.163443"${query.msl ? " disabled" : "" } class="svelte-7fmaif"${api.add_attribute("value", property.location.lng, 1)}>
							${ !query.msl ? `${api.validate_component(api.Button, 'Button').$$render($$result, { type: "button" }, {}, { default: () => `Get current GPS` })}` : `` }

							${ property.location.lat && property.location.lng ? `${api.validate_component(StaticMap.StaticMap, 'StaticMap').$$render($$result, {
			lat: property.location.lat,
			lon: property.location.lng,
			zoom: "15",
			marker: "https://i.imgur.com/gA01omN.png"
		}, {}, {})}` : `` }
						</fieldset>
					</div>
				</section>


				<section class="section section_contacts svelte-7fmaif">
					<div class="header">
						<h3>Contacts</h3>
						<p class="svelte-7fmaif">Email and Phone number of a realtor or person selling the property, usually found on a placard in front of the property.</p>
					</div>

					<div class="inputs">
						<fieldset class="svelte-7fmaif">
							<legend class="svelte-7fmaif">Phone</legend>
							<input type="text" placeholder="ex: 1234-5678" class="svelte-7fmaif"${api.add_attribute("value", property.contact_phone, 1)}>
						</fieldset>

						<fieldset class="svelte-7fmaif">
							<legend class="svelte-7fmaif">Email</legend>
							<input type="text" placeholder="ex: this@that.there" class="svelte-7fmaif"${api.add_attribute("value", property.contact_email, 1)}>
						</fieldset>

						<fieldset class="svelte-7fmaif">
							<legend class="svelte-7fmaif">Realtor</legend>
							<input type="text" placeholder="ex: Re/Max or Jane Doe" class="svelte-7fmaif"${api.add_attribute("value", property.contact_realtor, 1)}>
						</fieldset>
					</div>
				</section>


				<section class="section section_basics svelte-7fmaif">
					<div class="header">
						<h3>Basics</h3>
						<p class="svelte-7fmaif">These are initial values and usually first thing user looks for when narrowing down their options.</p>
					</div>

					<div class="inputs">
						<fieldset class="svelte-7fmaif">
							<legend class="svelte-7fmaif">Year built</legend>
							<input type="text" placeholder="ex: 2019" class="svelte-7fmaif"${api.add_attribute("value", property.year_built, 1)}>
						</fieldset>

						<fieldset class="svelte-7fmaif">
							<legend class="svelte-7fmaif">Building Style</legend>
							<input type="text" placeholder="ex: 2 Storey" class="svelte-7fmaif"${api.add_attribute("value", property.building_style, 1)}>
						</fieldset>

						<fieldset class="svelte-7fmaif">
							<legend class="svelte-7fmaif">Lot Size ãŽ¡</legend>
							<input type="text" placeholder="ex: 900" class="svelte-7fmaif"${api.add_attribute("value", property.lot_size, 1)}>
						</fieldset>

						<fieldset class="svelte-7fmaif">
							<legend class="svelte-7fmaif">Building Size ãŽ¡</legend>
							<input type="text" placeholder="ex: 810" class="svelte-7fmaif"${api.add_attribute("value", property.building_size, 1)}>
						</fieldset>
					</div>
				</section>


				<section class="section section_details svelte-7fmaif">
					<div class="header">
						<h3>Details</h3>
						<p class="svelte-7fmaif">Information important to the user and thus should be filled in as soon as possible. Also used in filters.</p>
					</div>

					<div class="inputs">
						<fieldset class="svelte-7fmaif">
							<legend class="svelte-7fmaif">Bedrooms</legend>
							<input type="text" placeholder="ex: 3" class="svelte-7fmaif"${api.add_attribute("value", property.beds_count, 1)}>
						</fieldset>

						<fieldset class="svelte-7fmaif">
							<legend class="svelte-7fmaif">Bathrooms</legend>
							<input type="text" placeholder="ex: 3" class="svelte-7fmaif"${api.add_attribute("value", property.baths_count, 1)}>
						</fieldset>

						<fieldset class="svelte-7fmaif">
							<legend class="svelte-7fmaif">Restrooms (half-baths)</legend>
							<input type="text" placeholder="ex: 2" class="svelte-7fmaif"${api.add_attribute("value", property.half_baths_count, 1)}>
						</fieldset>

						<fieldset class="svelte-7fmaif">
							<legend class="svelte-7fmaif">Rooms</legend>
							<input type="text" placeholder="ex: 6" class="svelte-7fmaif"${api.add_attribute("value", property.rooms_count, 1)}>
						</fieldset>

						<fieldset class="svelte-7fmaif">
							<legend class="svelte-7fmaif">Parking Spaces</legend>
							<input type="text" placeholder="ex: 9" class="svelte-7fmaif"${api.add_attribute("value", property.parking_spaces, 1)}>
						</fieldset>
					</div>
				</section>


				<section class="section section_pricing svelte-7fmaif">
					<div class="header">
						<h3>Pricing</h3>
						<p class="svelte-7fmaif">Everything regarding money goes in here and is very important since used in filters and relevent to user.</p>
					</div>

					<div class="inputs">
						<fieldset class="svelte-7fmaif">
							<legend class="svelte-7fmaif">Price $</legend>
							<input type="text" placeholder="ex: 630000" class="svelte-7fmaif"${api.add_attribute("value", property.price, 1)}>
						</fieldset>

						<fieldset class="svelte-7fmaif">
							<legend class="svelte-7fmaif">Rent ($/month)</legend>
							<input type="text" placeholder="ex: 1800" class="svelte-7fmaif"${api.add_attribute("value", property.rent, 1)}>
						</fieldset>

						<fieldset class="svelte-7fmaif">
							<legend class="svelte-7fmaif">Taxes ($/year)</legend>
							<input type="text" placeholder="ex: 1500" class="svelte-7fmaif"${api.add_attribute("value", property.taxes, 1)}>
						</fieldset>

						<fieldset class="svelte-7fmaif">
							<legend class="svelte-7fmaif">Fees (condo, asssociation) ($/month)</legend>
							<input type="text" placeholder="ex: 120" class="svelte-7fmaif"${api.add_attribute("value", property.fees, 1)}>
						</fieldset>
					</div>
				</section>


				<section class="section section_features svelte-7fmaif">
					<div class="header">
						<h3>Features</h3>
						<p class="svelte-7fmaif">Description, features, photos. Photos are important and good quality should be provided.</p>
					</div>

					<div class="inputs">
						<fieldset class="svelte-7fmaif">
							<legend class="svelte-7fmaif">Features</legend>
							<input type="text" placeholder="ex: BBQ" class="svelte-7fmaif">
							<div class="feature-list svelte-7fmaif">
								${api.each(property.features, (feature, i) => `<span class="feature svelte-7fmaif">
										<i class="close svelte-7fmaif"></i>
										${api.escape(feature)}
									</span>`)}
							</div>
						</fieldset>

						<fieldset class="description svelte-7fmaif">
							<legend class="svelte-7fmaif">Description</legend>
							<textarea rows="6" placeholder="Description (max 9 sentences)" class="svelte-7fmaif">${(property.description) || ""}</textarea>
						</fieldset>

						<fieldset class="photos svelte-7fmaif">
							<legend class="svelte-7fmaif">Photos</legend>
							<input type="text" placeholder="ex: //placekitten.com/g/1080/810" class="svelte-7fmaif">
							<div class="photo-list svelte-7fmaif">
								${api.each(property.photos, (photo, i) => `<div class="photo svelte-7fmaif" style="background-image: url(${api.escape(photo)})">
										<i class="close svelte-7fmaif"></i>

									</div>`)}
							</div>
						</fieldset>
					</div>
				</section>


				<footer class="buttons-group svelte-7fmaif">
					${ slug && property.is_active && !$isAdmin ? `${api.validate_component(api.Button, 'Button').$$render($$result, {
			type: "button",
			color: "danger",
			disabled: inProgress
		}, {}, { default: () => `Remove` })}` : `` }
					${ slug && $isAdmin ? `${api.validate_component(api.Button, 'Button').$$render($$result, {
			type: "button",
			color: "danger",
			disabled: inProgress
		}, {}, { default: () => `Delete` })}` : `` }

					${ slug && $isAdmin ? `${api.validate_component(api.Button, 'Button').$$render($$result, {
			type: "button",
			disabled: inProgress
		}, {}, { default: () => `Print` })}` : `` }

					${api.validate_component(api.Button, 'Button').$$render($$result, {
			type: "button",
			color: "black",
			disabled: inProgress || !formIsValid
		}, {}, {
			default: () => `
						${ slug ? `Submit Changes` : `Add Property` }
					`
		})}
				</footer>
			</div>
		</section>


		${api.validate_component(Modal, 'Modal').$$render($$result, {
			title: "Delete listing?",
			showModal: showModal
		}, {
			showModal: $$value => { showModal = $$value; $$settled = false; }
		}, {
			default: () => `
			`,
			content: () => `<div slot="content">
				Are you sure you want to delete this listing? By doing this, all data will be permenantly deleted.
			</div>
			${api.validate_component(api.Button, 'Button').$$render($$result, { mode: "clean" }, {}, { default: () => `Cancel` })}
			${api.validate_component(api.Button, 'Button').$$render($$result, { mode: "danger" }, {}, { default: () => `Confirm` })}
		`
		})}`;
	} while (!$$settled);

	return $$rendered;
});

exports.Editor = Editor;
exports.Logo = Logo;
