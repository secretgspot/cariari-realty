!function(){"use strict";const e=["client/client.e2018741.js","client/_commonjsHelpers.fffabd3b.js","client/StaticMap.0cbae71c.js","client/helpers.5e620e7f.js","client/index.a22a940d.js","client/api.4b05b4a4.js","client/Badge.322af206.js","client/index.10598da7.js","client/Toggle.6057f846.js","client/app.8b8d4cbb.js","client/[slug].c59c8805.js","client/LogoSvg.cd59233e.js","client/index.d8da1f2f.js","client/[slug].5676478a.js","client/list.b7df3b6f.js","client/_Editor.01081702.js","client/Details.b8c97be1.js","client/mapbox-gl.9a14f69d.js"].concat(["service-worker-index.html","favicon.png","global.css","images/icons/icon_arrow_left.svg","images/icons/icon_arrow_right.svg","images/icons/icon_baths.svg","images/icons/icon_beds.svg","images/icons/icon_half baths.svg","images/icons/icon_parkings.svg","images/icons/icon_pin.svg","images/icons/icon_rooms.svg","images/logo/icon.png","images/logo/logo_coin_bw.svg","images/logo/logo_coin_gold.svg","images/logo/logo_full_bw.svg","images/logo/logo_full_gold.svg","images/logo/logo_minimal_bw.svg","images/logo/logo_minimal_gold.svg","images/logo/logo_regular_bw.svg","images/logo/logo_regular_gold.svg","images/placeholder/1080x810.png","images/placeholder/450x360.png","images/placeholder/empty_list.svg","images/placeholder/person.png","manifest.json"]),s=new Set(e);self.addEventListener("install",s=>{s.waitUntil(caches.open("cache1573601589602").then(s=>s.addAll(e)).then(()=>{self.skipWaiting()}))}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(async e=>{for(const s of e)"cache1573601589602"!==s&&await caches.delete(s);self.clients.claim()}))}),self.addEventListener("fetch",e=>{if("GET"!==e.request.method||e.request.headers.has("range"))return;const o=new URL(e.request.url);o.protocol.startsWith("http")&&(o.hostname===self.location.hostname&&o.port!==self.location.port||(o.host===self.location.host&&s.has(o.pathname)?e.respondWith(caches.match(e.request)):"only-if-cached"!==e.request.cache&&e.respondWith(caches.open("offline1573601589602").then(async s=>{try{const o=await fetch(e.request);return s.put(e.request,o.clone()),o}catch(o){const i=await s.match(e.request);if(i)return i;throw o}}))))})}();
